{"version":3,"file":"VoiceRecorderImpl.js","sourceRoot":"","sources":["../../src/VoiceRecorderImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import getBlobDuration from 'get-blob-duration';\n\nimport { RecordingStatus } from './definitions';\nimport type { Base64String, CurrentRecordingStatus, GenericResponse, HelloWorldResponse, RecordingData } from './definitions';\nimport {\n\talreadyRecordingError,\n\tcouldNotQueryPermissionStatusError,\n\tdeviceCannotVoiceRecordError,\n\temptyRecordingError,\n\tfailedToFetchRecordingError,\n\tfailedToRecordError,\n\tfailureResponse,\n\tmissingPermissionError,\n\trecordingHasNotStartedError,\n\tsuccessResponse,\n} from './predefined-web-responses';\nimport type { VoiceRecorderWeb } from './web';\n\n// these mime types will be checked one by one in order until one of them is found to be supported by the current browser\nconst possibleMimeTypes = ['audio/aac', 'audio/webm;codecs=opus', 'audio/mp4', 'audio/webm', 'audio/ogg;codecs=opus'];\nconst neverResolvingPromise = (): Promise<any> => new Promise(() => undefined);\n\nexport class VoiceRecorderImpl {\n\n\tprivate recordTime = 0;\n\tprivate timerInterval: NodeJS.Timeout | null = null;\n\tprivate mediaRecorder: MediaRecorder | null = null;\n\tprivate chunks: any[] = [];\n\tprivate pendingResult: Promise<RecordingData> = neverResolvingPromise();\n\tprivate plugin:VoiceRecorderWeb;\n\n\tconstructor(plugin:VoiceRecorderWeb) {\n\t\tthis.plugin = plugin\n\t}\n\n\tpublic static async canDeviceVoiceRecord(): Promise<GenericResponse> {\n\t\tif (navigator?.mediaDevices?.getUserMedia == null || VoiceRecorderImpl.getSupportedMimeType() == null) {\n\t\t\treturn failureResponse();\n\t\t} else {\n\t\t\treturn successResponse();\n\t\t}\n\t}\n\n\tpublic async startRecording(): Promise<GenericResponse> {\n\t\tif (this.mediaRecorder != null) {\n\t\t\tthrow alreadyRecordingError();\n\t\t}\n\t\tconst deviceCanRecord = await VoiceRecorderImpl.canDeviceVoiceRecord();\n\t\tif (!deviceCanRecord.value) {\n\t\t\tthrow deviceCannotVoiceRecordError();\n\t\t}\n\t\tconst havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => successResponse());\n\t\tif (!havingPermission.value) {\n\t\t\tthrow missingPermissionError();\n\t\t}\n\n\t\treturn navigator.mediaDevices\n\t\t\t.getUserMedia({ audio: true })\n\t\t\t.then(this.onSuccessfullyStartedRecording.bind(this))\n\t\t\t.catch(this.onFailedToStartRecording.bind(this));\n\t}\n\n\tpublic async stopRecording(): Promise<RecordingData> {\n\t\tif (this.mediaRecorder == null) {\n\t\t\tthrow recordingHasNotStartedError();\n\t\t}\n\t\ttry {\n\t\t\tthis.mediaRecorder.stop();\n\t\t\tthis.stopTimer();\n\t\t\tthis.mediaRecorder.stream.getTracks().forEach((track) => track.stop());\n\t\t\treturn this.pendingResult;\n\t\t} catch (ignore) {\n\t\t\tthrow failedToFetchRecordingError();\n\t\t} finally {\n\t\t\tthis.prepareInstanceForNextOperation();\n\t\t}\n\t}\n\n\tpublic static async hasAudioRecordingPermission(): Promise<GenericResponse> {\n\t\tif (navigator.permissions.query == null) {\n\t\t\tif (navigator.mediaDevices == null) {\n\t\t\t\treturn Promise.reject(couldNotQueryPermissionStatusError());\n\t\t\t}\n\t\t\treturn navigator.mediaDevices\n\t\t\t\t.getUserMedia({ audio: true })\n\t\t\t\t.then(() => successResponse())\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthrow couldNotQueryPermissionStatusError();\n\t\t\t\t});\n\t\t}\n\n\t\treturn navigator.permissions\n\t\t\t.query({ name: 'microphone' as any })\n\t\t\t.then((result) => ({ value: result.state === 'granted' }))\n\t\t\t.catch(() => {\n\t\t\t\tthrow couldNotQueryPermissionStatusError();\n\t\t\t});\n\t}\n\n\tpublic static async requestAudioRecordingPermission(): Promise<GenericResponse> {\n\t\tconst havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => failureResponse());\n\t\tif (havingPermission.value) {\n\t\t\treturn successResponse();\n\t\t}\n\n\t\treturn navigator.mediaDevices\n\t\t\t.getUserMedia({ audio: true })\n\t\t\t.then(() => successResponse())\n\t\t\t.catch(() => failureResponse());\n\t}\n\n\tpublic pauseRecording(): Promise<GenericResponse> {\n\t\tif (this.mediaRecorder == null) {\n\t\t\tthrow recordingHasNotStartedError();\n\t\t} else if (this.mediaRecorder.state === 'recording') {\n\t\t\tthis.mediaRecorder.pause();\n\t\t\treturn Promise.resolve(successResponse());\n\t\t} else {\n\t\t\treturn Promise.resolve(failureResponse());\n\t\t}\n\t}\n\n\tpublic resumeRecording(): Promise<GenericResponse> {\n\t\tif (this.mediaRecorder == null) {\n\t\t\tthrow recordingHasNotStartedError();\n\t\t} else if (this.mediaRecorder.state === 'paused') {\n\t\t\tthis.mediaRecorder.resume();\n\t\t\treturn Promise.resolve(successResponse());\n\t\t} else {\n\t\t\treturn Promise.resolve(failureResponse());\n\t\t}\n\t}\n\n\tpublic getCurrentStatus(): Promise<CurrentRecordingStatus> {\n\t\tif (this.mediaRecorder == null) {\n\t\t\treturn Promise.resolve({ status: RecordingStatus.NONE });\n\t\t} else if (this.mediaRecorder.state === 'recording') {\n\t\t\treturn Promise.resolve({ status: RecordingStatus.RECORDING });\n\t\t} else if (this.mediaRecorder.state === 'paused') {\n\t\t\treturn Promise.resolve({ status: RecordingStatus.PAUSED });\n\t\t} else {\n\t\t\treturn Promise.resolve({ status: RecordingStatus.NONE });\n\t\t}\n\t}\n\n\tpublic isRecording():boolean {\n\t\treturn this.mediaRecorder && this.mediaRecorder.state === 'recording' || false;\n\t}\n\n\tpublic getRecordTime():number {\n\t\treturn this.recordTime\n\t}\n\n\tpublic helloWorld(): Promise<HelloWorldResponse> {\n\t\treturn Promise.resolve({ value: \"Hello there from web!\" });\n\t}\n\n\tpublic static getSupportedMimeType(): string | null {\n\t\tif (MediaRecorder?.isTypeSupported == null) return null;\n\t\tconst foundSupportedType = possibleMimeTypes.find((type) => MediaRecorder.isTypeSupported(type));\n\t\treturn foundSupportedType ?? null;\n\t}\n\n\tprivate onSuccessfullyStartedRecording(stream: MediaStream): GenericResponse {\n\t\tthis.startTimer();\n\t\tthis.pendingResult = new Promise((resolve, reject) => {\n\t\t\tthis.mediaRecorder = new MediaRecorder(stream);\n\t\t\tthis.mediaRecorder.onerror = () => {\n\t\t\t\tthis.prepareInstanceForNextOperation();\n\t\t\t\treject(failedToRecordError());\n\t\t\t};\n\t\t\tthis.mediaRecorder.onstop = async () => {\n\t\t\t\tconst mimeType = VoiceRecorderImpl.getSupportedMimeType();\n\t\t\t\tif (mimeType == null) {\n\t\t\t\t\tthis.prepareInstanceForNextOperation();\n\t\t\t\t\treject(failedToFetchRecordingError());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst blobVoiceRecording = new Blob(this.chunks, { type: mimeType });\n\t\t\t\tif (blobVoiceRecording.size <= 0) {\n\t\t\t\t\tthis.prepareInstanceForNextOperation();\n\t\t\t\t\treject(emptyRecordingError());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst recordDataBase64 = await VoiceRecorderImpl.blobToBase64(blobVoiceRecording);\n\t\t\t\tconst recordingDuration = await getBlobDuration(blobVoiceRecording);\n\t\t\t\tthis.prepareInstanceForNextOperation();\n\t\t\t\tresolve({ value: { recordDataBase64, mimeType, msDuration: recordingDuration * 1000 } });\n\t\t\t};\n\t\t\tthis.mediaRecorder.ondataavailable = (event: any) => this.chunks.push(event.data);\n\t\t\tthis.mediaRecorder.start();\n\t\t});\n\t\treturn successResponse();\n\t}\n\n\tprivate onFailedToStartRecording(): GenericResponse {\n\t\tthis.stopTimer();\n\t\tthis.prepareInstanceForNextOperation();\n\t\tthrow failedToRecordError();\n\t}\n\n\tprivate static blobToBase64(blob: Blob): Promise<Base64String> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onloadend = () => {\n\t\t\t\tconst recordingResult = String(reader.result);\n\t\t\t\tconst splitResult = recordingResult.split('base64,');\n\t\t\t\tconst toResolve = splitResult.length > 1 ? splitResult[1] : recordingResult;\n\t\t\t\tresolve(toResolve.trim());\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t});\n\t}\n\n\tprivate prepareInstanceForNextOperation(): void {\n\t\tif (this.mediaRecorder != null && this.mediaRecorder.state === 'recording') {\n\t\t\ttry {\n\t\t\t\tthis.mediaRecorder.stop();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('While trying to stop a media recorder, an error was thrown', error);\n\t\t\t}\n\t\t}\n\t\tthis.pendingResult = neverResolvingPromise();\n\t\tthis.mediaRecorder = null;\n\t\tthis.chunks = [];\n\t}\n\n\tprivate startTimer(): void {\n\t\tthis.recordTime = 0;\n\t\tthis.timerInterval = setInterval(() => {\n\t\t\tif (this.mediaRecorder && this.mediaRecorder.state === 'recording') {\n\t\t\t\tthis.recordTime++;\n\t\t\t\tthis.plugin.sendUpdate(this.mediaRecorder.state === 'recording', this.recordTime);\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tprivate stopTimer(): void {\n\t\tif (this.timerInterval) {\n\t\t\tclearInterval(this.timerInterval);\n\t\t\tthis.timerInterval = null;\n\t\t}\n\t}\n}\n"]}
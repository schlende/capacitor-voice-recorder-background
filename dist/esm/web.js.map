{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAGxD,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAA/C;;QACS,0BAAqB,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;IA2D7D,CAAC;IAzDO,oBAAoB;QAC1B,OAAO,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;IACjD,CAAC;IAEM,2BAA2B;QACjC,OAAO,iBAAiB,CAAC,2BAA2B,EAAE,CAAC;IACxD,CAAC;IAEM,+BAA+B;QACrC,OAAO,iBAAiB,CAAC,+BAA+B,EAAE,CAAC;IAC5D,CAAC;IAEM,cAAc;QACpB,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;IACpD,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,CAAC;IACnD,CAAC;IAEM,UAAU;QAChB,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC;IAEM,cAAc;QACpB,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;IACpD,CAAC;IAEM,eAAe;QACrB,OAAO,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,CAAC;IACrD,CAAC;IAEM,gBAAgB;QACtB,OAAO,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;IACtD,CAAC;IAEM,WAAW;QACjB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,aAAa;QACnB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,EAAC,CAAC,CAAC;IAC7E,CAAC;IAEM,gBAAgB;QACtB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAEM,eAAe;QACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAEM,UAAU,CAAC,WAAmB,EAAE,aAAoB;QAC1D,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,EAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAC,CAAC,CAAA;IAClG,CAAC;CACD","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport { VoiceRecorderImpl } from './VoiceRecorderImpl';\nimport type { CurrentRecordingStatus, GenericResponse, HelloWorldResponse, RecordingData, RecordingTimeResponse, VoiceRecorderPlugin } from './definitions';\n\nexport class VoiceRecorderWeb extends WebPlugin implements VoiceRecorderPlugin {\n\tprivate voiceRecorderInstance = new VoiceRecorderImpl(this);\n\n\tpublic canDeviceVoiceRecord(): Promise<GenericResponse> {\n\t\treturn VoiceRecorderImpl.canDeviceVoiceRecord();\n\t}\n\n\tpublic hasAudioRecordingPermission(): Promise<GenericResponse> {\n\t\treturn VoiceRecorderImpl.hasAudioRecordingPermission();\n\t}\n\n\tpublic requestAudioRecordingPermission(): Promise<GenericResponse> {\n\t\treturn VoiceRecorderImpl.requestAudioRecordingPermission();\n\t}\n\n\tpublic startRecording(): Promise<GenericResponse> {\n\t\treturn this.voiceRecorderInstance.startRecording();\n\t}\n\n\tpublic stopRecording(): Promise<RecordingData> {\n\t\treturn this.voiceRecorderInstance.stopRecording();\n\t}\n\n\tpublic helloWorld(): Promise<HelloWorldResponse> {\n\t\treturn this.voiceRecorderInstance.helloWorld();\n\t}\n\n\tpublic pauseRecording(): Promise<GenericResponse> {\n\t\treturn this.voiceRecorderInstance.pauseRecording();\n\t}\n\n\tpublic resumeRecording(): Promise<GenericResponse> {\n\t\treturn this.voiceRecorderInstance.resumeRecording();\n\t}\n\n\tpublic getCurrentStatus(): Promise<CurrentRecordingStatus> {\n\t\treturn this.voiceRecorderInstance.getCurrentStatus();\n\t}\n\n\tpublic isRecording(): Promise<GenericResponse>{\n\t\treturn Promise.resolve({value: this.voiceRecorderInstance.isRecording()});\n\t}\n\n\tpublic recordingTime(): Promise<RecordingTimeResponse>{\n\t\treturn Promise.resolve({value: this.voiceRecorderInstance.getRecordTime()});\n\t}\n\n\tpublic startBgRecording(): Promise<void> {\n\t\tconsole.log(\"Not implemented\");\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic stopBgRecording(): Promise<void> {\n\t\tconsole.log(\"Not implemented\");\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic sendUpdate(isRecording:boolean, recordingTime:number):void {\n\t\tthis.notifyListeners(\"recordingUpdate\", {isRecording: isRecording, recordingTime: recordingTime})\n\t}\n}\n"]}